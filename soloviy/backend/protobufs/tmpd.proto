syntax = "proto3";

package tmpd;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";


// Service to communicate with mpd
service TMpdService {
    // Connect to mpd instance
    rpc Connect(ConnectionCredentials) returns (ConnectionDetails);
    // Update music DB
    rpc UpdateDB(google.protobuf.Empty) returns (google.protobuf.Empty);
    // Adds tile based on tile
    rpc AddTile(MetaPlaylist) returns (MetaPlaylist);
    // Returns list of all meta playlists
    rpc ListPlaylists(google.protobuf.Empty) returns (ListMetaPlaylist);
    // Returns playlist based on metadata
    rpc GetPlaylist(MetaPlaylist) returns (Playlist);
    // Deletes tile (and connected songs) by uuid
    rpc DeleteTile(MetaPlaylist) returns (MetaPlaylist);
    // PlayPause music 
    // rpc PlaySong(Playlist) returns (Playlist);
}


message Playlist {
    MetaPlaylist meta = 1;
    repeated Song songs = 2;
}

message ListMetaPlaylist {
    repeated MetaPlaylist value = 1;
}

message MetaPlaylist {
    string uuid = 1;
    string name = 2;
    SongField sort_by = 3;
    SortOrder sort_order = 4;
    SongField group_by = 5;
    int32 song_pos = 6;
    bool locked = 7;
}

// Credentials to connect to mpd
message ConnectionCredentials {
    // Socket where mpd is located
    // Send empty string to use native mpd server
    string socket = 1;
    // Password for mpd connection
    // Omit if no password needed
    string password = 2;
}

// Result of mpd connection
message ConnectionDetails {
    ConnectionStatus status = 1;
}

// Status of mpd connection
enum ConnectionStatus {
    Connected = 0;
    FailedToConnect = 1;
    NoMpdBinary = 2;
}

enum SortOrder {
    Ascending = 0;
    Descending = 1;
}

enum SongField {
    none = 0;
    file = 1;
    time = 2;
    duration = 3;
    lastmodified = 4;
    format = 5;
    artist = 6;
    albumartist = 7;
    title = 8;
    album = 9;
    track = 10;
    date = 11;
    genre = 12;
    composer = 13;
    disc = 14;
    directory = 15;
}

message Song {
    string file = 1;
    int64 time = 2;
    float duration = 3;
    google.protobuf.Timestamp lastmodified = 4;
    string format = 5;
    string artist = 6;
    string albumartist = 7;
    string title = 8;
    string album = 9;
    int64 track = 10;
    int32 date = 11;
    string genre = 12;
    string composer = 13;
    int64 disc = 14;
}
